<?php
/**
 * RefundsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketplace API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.10.8
 * Contact: support@lyra-network.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * RefundsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RefundsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for refundsCreate
     *
     * Creates a refund..
     *
     */
    public function testRefundsCreate()
    {
    }

    /**
     * Test case for refundsDelete
     *
     * Cancels a refund..
     *
     */
    public function testRefundsDelete()
    {
    }

    /**
     * Test case for refundsList
     *
     * Retrieves the list of refunds related to an order..
     *
     */
    public function testRefundsList()
    {
    }

    /**
     * Test case for refundsRead
     *
     * Retrieve a single refund..
     *
     */
    public function testRefundsRead()
    {
    }

    /**
     * Test case for refundsUpdate
     *
     * Updates a refund..
     *
     */
    public function testRefundsUpdate()
    {
    }
}
